---

- name: Check if instance directory exists
  stat:
    path: "/var/lib/dirsrv/slapd-{{ ds389_init_slapd.instance_name }}"
  register: ds389_instance_dir


- name: "Check if {{ ds389_init_slapd.instance_name }} instance directory exists"
  set_fact:
    ds389_instance_dir_exists: "{{ ds389_instance_dir.stat.exists and ds389_instance_dir.stat.isdir }}"

- block:
    - name: create installation template
      template:
        src: templates/install.inf.j2
        dest: /tmp/install.inf
        mode: '600'
      when:
        - not ds389_instance_dir_exists

    # On newer versions of 389DS setup-ds.pl got deprecated and separated in a legacy package
    # Here we're using the modern equivalent, with a completely different API...
    - name: Run installation script (dscreate)
      become: true
      command: |
        /usr/sbin/dscreate \
          from-file /tmp/install.inf
      when:
        - not ds389_instance_dir_exists

    - name: copy additional ldif files (dsconf)
      copy:
        src: "{{ item }}"
        dest: "{{ ds389_install_additional_ldif_dir }}/{{ item | basename }}"
        mode: '400'
        owner: dirsrv
        group: dirsrv
      when:
        - not ds389_instance_dir_exists
      loop: "{{ ds389_install_additional_ldif }}"

    # The newer version of the install.ini file does not have a InstallLdifFile object anymore
    # So we manually install extra ldifs later
    - name: Install additional ldif files (dsconf)
      command: >
        /usr/sbin/dsconf
        {{ ds389_init_slapd.instance_name }}
        backend import
        {{ ds389_init_backend.[0].name }}
        {{ ds389_install_additional_ldif_dir }}/{{ item | basename }}
      when:
        - not ds389_instance_dir_exists
      loop: "{{ ds389_install_additional_ldif }}"

    - name: Delete temporary additional ldif files (dsconf)
      file:
        path: "{{ ds389_install_additional_ldif_dir }}/{{ item | basename }}"
        state: absent
      when:
        - not ds389_instance_dir_exists
      loop: "{{ ds389_install_additional_ldif }}"

  always:
    - name: Remove installation template
      file:
        state: absent
        path: /tmp/install.inf

- name: restart 389DS {{ ds389_init_slapd.instance_name }} instance
  become: true
  service:
    name: "dirsrv@{{ ds389_init_slapd.instance_name }}"
    state: restarted

...
