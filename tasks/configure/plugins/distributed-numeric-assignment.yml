---

- name: d
  debug:
    msg:
      - "{{ ds389_plugins_enabled }}"
      # - "{{ 'Distributed Numeric Assignment Plugin' in ds389_plugins_enabled }}"
      # - "{{ ds389_plugins_enabled['Distributed Numeric Assignment Plugin'] }}"

- name: enable plugins dynamic load
  ldap_attrs:
    state: exact
    server_uri: "{{ ds389_server_uri }}"
    validate_certs: "{{ ds389_tls.validate_certs }}"
    start_tls: "{{ ds389_starttls_early }}"
    bind_dn: "{{ ds389_init_slapd.root_dn }}"
    bind_pw: "{{ ds389_init_slapd.root_password }}"
    dn: "cn=config"
    attributes:
      nsslapd-dynamic-plugins: "{{ 'on' if ds386_plugins_dynamic_load else 'off' }}"

- name: enable plugins
  ldap_attrs:
    state: exact
    server_uri: "{{ ds389_server_uri }}"
    validate_certs: "{{ ds389_tls.validate_certs }}"
    start_tls: "{{ ds389_starttls_early }}"
    bind_dn: "{{ ds389_init_slapd.root_dn }}"
    bind_pw: "{{ ds389_init_slapd.root_password }}"
    dn: "cn={{ item.key }},cn=plugins,cn=config"
    attributes:
      nsslapd-pluginEnabled: "{{ 'on' if item.value else 'off' }}"
  loop: "{{ ds389_plugins_enabled | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  notify:
    - restart ds389

- name: remove DNA plugin configuration (if disabled)
  ldap_entry:
    state: absent
    server_uri: "{{ ds389_server_uri }}"
    validate_certs: "{{ ds389_tls.validate_certs }}"
    start_tls: "{{ ds389_starttls_early }}"
    bind_dn: "{{ ds389_init_slapd.root_dn }}"
    bind_pw: "{{ ds389_init_slapd.root_password }}"
    dn: "{{ item }}"
  loop:
    - "cn=UID numbers,cn=Distributed Numeric Assignment Plugin,cn=plugins,cn=config"
    - "cn=GID numbers,cn=Distributed Numeric Assignment Plugin,cn=plugins,cn=config"
  when:
    - "'Distributed Numeric Assignment Plugin' in ds389_plugins_enabled"
    - not ds389_plugins_enabled['Distributed Numeric Assignment Plugin']
  register: ds389_restart_condition_plugins_1

- name: manage the dna shared ranges OUs, required when we have a replica
  block:
    - name: create the shared DNA Ranges OU
      ldap_entry:
        state: present
        server_uri: "{{ ds389_server_uri }}"
        validate_certs: "{{ ds389_tls.validate_certs }}"
        start_tls: "{{ ds389_starttls_early }}"
        bind_dn: "{{ ds389_init_slapd.root_dn }}"
        bind_pw: "{{ ds389_init_slapd.root_password }}"
        dn: "{{ item }}"
        objectClass:
          - top
          - extensibleObject
          - organizationalUnit
      loop:
        - "ou=Ranges,{{ ds389_init_backend.0.suffix }}"

    - name: create the shared DNA account and group OUs
      ldap_entry:
        state: present
        server_uri: "{{ ds389_server_uri }}"
        validate_certs: "{{ ds389_tls.validate_certs }}"
        start_tls: "{{ ds389_starttls_early }}"
        bind_dn: "{{ ds389_init_slapd.root_dn }}"
        bind_pw: "{{ ds389_init_slapd.root_password }}"
        dn: "{{ item }}"
        objectClass:
          - top
          - extensibleObject
      loop:
        - "cn=Account UIDs,ou=Ranges,{{ ds389_init_backend.0.suffix }}"
        - "cn=Account GIDs,ou=Ranges,{{ ds389_init_backend.0.suffix }}"

    - name: configure DNA plugin parameters for the replica
      ldap_entry:
        server_uri: "{{ ds389_server_uri }}"
        validate_certs: "{{ ds389_tls.validate_certs }}"
        start_tls: "{{ ds389_starttls_early }}"
        bind_dn: "{{ ds389_init_slapd.root_dn }}"
        bind_pw: "{{ ds389_init_slapd.root_password }}"
        dn: "{{ item }}"
        objectClass:
          - top
          - dnaSharedConfig
        attributes:
          dnahostname: '{{ ansible_fqdn }}'
          dnaPortNum: 389
          dnaSecurePortNum: 636
      loop:
        - "dnaHostname={{ ansible_fqdn }}+dnaPortNum=389,cn=Account UIDs,ou=Ranges,{{ ds389_init_backend.0.suffix }}"
        - "dnaHostname={{ ansible_fqdn }}+dnaPortNum=389,cn=Account GIDs,ou=Ranges,{{ ds389_init_backend.0.suffix }}"

  when:
    - "'Distributed Numeric Assignment Plugin' in ds389_plugins_enabled"
    - "ds389_plugins_enabled['Distributed Numeric Assignment Plugin']"
    - ds389_replica_role is defined

- name: manage the DNA plugin configuration
  block:
    - name: create DNA plugin configuration (if enabled)
      ldap_entry:
        state: present
        server_uri: "{{ ds389_server_uri }}"
        validate_certs: "{{ ds389_tls.validate_certs }}"
        start_tls: "{{ ds389_starttls_early }}"
        bind_dn: "{{ ds389_init_slapd.root_dn }}"
        bind_pw: "{{ ds389_init_slapd.root_password }}"
        dn: "{{ item }}"
        objectClass:
          - top
          - extensibleObject
        attributes:
          dnatype: uidNumber
          dnanextvalue: 1
          dnafilter: "(objectclass=posixAccount)"
          dnascope: "{{ ds389_init_backend.0.suffix }}"
      loop:
        - "cn=UID numbers,cn=Distributed Numeric Assignment Plugin,cn=plugins,cn=config"
        - "cn=GID numbers,cn=Distributed Numeric Assignment Plugin,cn=plugins,cn=config"
      register: ds389_restart_condition_plugins_2

    - name: configure DNA plugin parameters (UID)
      ldap_attrs:
        state: exact
        server_uri: "{{ ds389_server_uri }}"
        validate_certs: "{{ ds389_tls.validate_certs }}"
        start_tls: "{{ ds389_starttls_early }}"
        bind_dn: "{{ ds389_init_slapd.root_dn }}"
        bind_pw: "{{ ds389_init_slapd.root_password }}"
        dn: "cn=UID numbers,cn=Distributed Numeric Assignment Plugin,cn=plugins,cn=config"
        attributes:
          cn: "UID numbers"
          dnatype: "uidNumber"
          dnamagicregen: "magic"  # doesn't have to be a number
          dnafilter: "(objectclass=posixAccount)"
          dnascope: "{{ ds389_init_backend.0.suffix }}"
          dnanextvalue: "{{ ds389_dna_plugin.uid_min }}"
          dnamaxvalue: "{{ ds389_dna_plugin.uid_max }}"
          dnasharedcfgdn: "cn=Account UIDs,ou=Ranges,{{ ds389_init_backend.0.suffix }}"
      register: ds389_restart_condition_plugins_3

    - name: configure DNA plugin parameters (GID)
      ldap_attrs:
        state: exact
        server_uri: "{{ ds389_server_uri }}"
        validate_certs: "{{ ds389_tls.validate_certs }}"
        start_tls: "{{ ds389_starttls_early }}"
        bind_dn: "{{ ds389_init_slapd.root_dn }}"
        bind_pw: "{{ ds389_init_slapd.root_password }}"
        dn: "cn=GID numbers,cn=Distributed Numeric Assignment Plugin,cn=plugins,cn=config"
        attributes:
          cn: "GID numbers"
          dnatype: "gidNumber"
          dnamagicregen: "magic"
          dnafilter: "(|(objectclass=posixAccount)(objectclass=posixGroup))"
          dnascope: "{{ ds389_init_backend.0.suffix }}"
          dnanextvalue: "{{ ds389_dna_plugin.gid_min }}"
          dnamaxvalue: "{{ ds389_dna_plugin.gid_max }}"
          dnasharedcfgdn: "cn=Account GIDs,ou=Ranges,{{ ds389_init_backend.0.suffix }}"
      register: ds389_restart_condition_plugins_4

  when:
    - "'Distributed Numeric Assignment Plugin' in ds389_plugins_enabled"
    - ds389_plugins_enabled['Distributed Numeric Assignment Plugin']

...
